{"version":3,"sources":["script.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","setTheme","theme","document","documentElement","className","radioField","querySelector","userPrefersLight","window","matchMedia","matches","userPrefersDark","inputs","querySelectorAll","checked","addEventListener","e","radioBtn","value","Calculator","previousOperationTextElement","currentOperationTextElement","this","reset","currentOperand","previousOperand","operation","undefined","toString","slice","number","includes","compute","computation","prev","parseFloat","current","isNaN","integerDisplay","stringNumber","integerDigits","split","decimalDigits","toLocaleString","maximumFractionDigits","concat","innerText","getDisplayNumber","numberButtons","operationButtons","equalsButton","deleteButton","resetButton","calculator","forEach","button","appendNumber","updateDisplay","chooseOperation","keyPressed","keys","keyboardInput","event","code","click"],"mappings":"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","file":"script.js","sourcesContent":["const setTheme = (theme) => (document.documentElement.className = theme);\r\nconst radioField = document.querySelector(\".radio-field\");\r\nconst userPrefersLight =\r\n  window.matchMedia &&\r\n  window.matchMedia(\"(prefers-color-scheme: light)\").matches;\r\nconst userPrefersDark =\r\n  window.matchMedia &&\r\n  window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\nconst inputs = document.querySelectorAll(\"input\");\r\ninputs.checked = false;\r\n\r\n// move checkbox on user preference theme\r\nif (userPrefersLight) {\r\n  inputs[1].checked = true;\r\n} else if (userPrefersDark) {\r\n  inputs[0].checked = true;\r\n} else {\r\n  inputs[2].checked = true;\r\n}\r\n// change themes\r\nradioField.addEventListener(\"change\", (e) => {\r\n  let radioBtn = e.target;\r\n\r\n  if (radioBtn.value == \"blue\") {\r\n    setTheme(\"blue\");\r\n  } else if (radioBtn.value == \"light\") {\r\n    setTheme(\"light\");\r\n  } else {\r\n    setTheme(\"custom\");\r\n  }\r\n});\r\n\r\n//Calculator\r\n\r\nclass Calculator {\r\n  constructor(previousOperationTextElement, currentOperationTextElement) {\r\n    this.previousOperationTextElement = previousOperationTextElement;\r\n    this.currentOperationTextElement = currentOperationTextElement;\r\n    this.reset();\r\n  }\r\n\r\n  reset() {\r\n    this.currentOperand = \"\";\r\n    this.previousOperand = \"\";\r\n    this.operation = undefined;\r\n  }\r\n\r\n  delete() {\r\n    this.currentOperand = this.currentOperand.toString().slice(0, -1);\r\n  }\r\n\r\n  appendNumber(number) {\r\n    if (number === \".\" && this.currentOperand.includes(\".\")) return;\r\n    this.currentOperand = this.currentOperand.toString() + number.toString();\r\n  }\r\n\r\n  chooseOperation(operation) {\r\n    if (this.currentOperand === \"\") return;\r\n    if (this.previousOperand !== \"\") {\r\n      this.compute();\r\n    }\r\n\r\n    this.operation = operation;\r\n    this.previousOperand = this.currentOperand;\r\n    this.currentOperand = \"\";\r\n  }\r\n\r\n  compute() {\r\n    let computation;\r\n    const prev = parseFloat(this.previousOperand);\r\n    const current = parseFloat(this.currentOperand);\r\n    if (isNaN(prev) || isNaN(current)) return;\r\n\r\n    switch (this.operation) {\r\n      case \"+\":\r\n        computation = prev + current;\r\n        break;\r\n      case \"-\":\r\n        computation = prev - current;\r\n        break;\r\n      case \"/\":\r\n        computation = prev / current;\r\n        break;\r\n      case \"*\":\r\n        computation = prev * current;\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    this.currentOperand = computation;\r\n    this.operation = undefined;\r\n    this.previousOperand = \"\";\r\n  }\r\n\r\n  getDisplayNumber(number) {\r\n    const stringNumber = number.toString();\r\n    const integerDigits = parseFloat(stringNumber.split(\".\")[0]);\r\n    const decimalDigits = stringNumber.split(\".\")[1];\r\n    let integerDisplay;\r\n    if (isNaN(integerDigits)) {\r\n      integerDisplay = \"\";\r\n    } else {\r\n      integerDisplay = integerDigits.toLocaleString(\"en\", {\r\n        maximumFractionDigits: 0,\r\n      });\r\n    }\r\n\r\n    if (decimalDigits != null) {\r\n      return `${integerDisplay}.${decimalDigits}`;\r\n    } else {\r\n      return integerDisplay;\r\n    }\r\n  }\r\n\r\n  updateDisplay() {\r\n    this.currentOperationTextElement.innerText = this.getDisplayNumber(\r\n      this.currentOperand\r\n    );\r\n    if (this.operation != null) {\r\n      this.previousOperationTextElement.innerText = `${this.getDisplayNumber(\r\n        this.previousOperand\r\n      )} ${this.operation}`;\r\n    } else {\r\n      this.previousOperationTextElement.innerText = \"\";\r\n    }\r\n  }\r\n}\r\n\r\nconst numberButtons = document.querySelectorAll(\"[data-number]\"),\r\n  operationButtons = document.querySelectorAll(\"[data-operation]\"),\r\n  equalsButton = document.querySelector(\"[data-equals]\"),\r\n  deleteButton = document.querySelector(\"[data-delete]\"),\r\n  resetButton = document.querySelector(\"[data-reset]\"),\r\n  previousOperationTextElement = document.querySelector(\r\n    \"[data-previous-operation]\"\r\n  ),\r\n  currentOperationTextElement = document.querySelector(\r\n    \"[data-current-operation]\"\r\n  );\r\n\r\nconst calculator = new Calculator(\r\n  previousOperationTextElement,\r\n  currentOperationTextElement\r\n);\r\n\r\nnumberButtons.forEach((button) => {\r\n  button.addEventListener(\"click\", () => {\r\n    calculator.appendNumber(button.innerText);\r\n    calculator.updateDisplay();\r\n  });\r\n});\r\n\r\noperationButtons.forEach((button) => {\r\n  button.addEventListener(\"click\", () => {\r\n    calculator.chooseOperation(button.innerText);\r\n    calculator.updateDisplay();\r\n  });\r\n});\r\n\r\nresetButton.addEventListener(\"click\", () => {\r\n  calculator.reset();\r\n  calculator.updateDisplay();\r\n});\r\n\r\nequalsButton.addEventListener(\"click\", () => {\r\n  calculator.compute();\r\n  calculator.updateDisplay();\r\n});\r\n\r\ndeleteButton.addEventListener(\"click\", () => {\r\n  calculator.delete();\r\n  calculator.updateDisplay();\r\n});\r\n\r\n// allow user to use keyboard for numbers and operations input\r\nwindow.addEventListener(\"keypress\", (e) => {\r\n  let keyPressed = e.key;\r\n  numberButtons.forEach((button) => {\r\n    if (keyPressed == button.innerText) {\r\n      calculator.appendNumber(keyPressed);\r\n      calculator.updateDisplay();\r\n    }\r\n  });\r\n\r\n  operationButtons.forEach((button) => {\r\n    if (keyPressed == button.innerText) {\r\n      calculator.chooseOperation(keyPressed);\r\n      calculator.updateDisplay();\r\n    }\r\n  });\r\n});\r\n\r\n// when user presses enter  activates '='\r\n// when user presses C  activates 'reset'\r\n// when user presses backspace activates 'del'\r\nconst keys = document.querySelectorAll(\".key\");\r\nfunction keyboardInput() {\r\n  document.addEventListener(\"keyup\", function (event) {\r\n    if (event.code === 'NumpadEnter') {\r\n      keys[2].click();\r\n    } else if (event.code === 'Backspace') {\r\n      keys[0].click();\r\n    } else if (event.code === 'KeyC' && keys[1].value == \"c\") {\r\n      keys[1].click();\r\n    } else {\r\n      return;\r\n    }\r\n  });\r\n}\r\n\r\nkeyboardInput();\r\n"]}